import React from 'react';
import jsPDF from 'jspdf';

const SafetyResources = () => {
  const resources = [
    {
      category: 'Emergency Contacts',
      items: [
        { name: 'Emergency Services', number: '911', description: 'Police, Fire, Ambulance' },
        { name: 'Traffic Police', number: '100', description: 'Traffic violations and accidents' },
        { name: 'Highway Patrol', number: '101', description: 'Highway emergencies' },
        { name: 'Medical Emergency', number: '102', description: 'Ambulance services' },
      ]
    },
    {
      category: 'Safety Guidelines',
      items: [
        { name: 'Speed Limits', description: 'Always obey posted speed limits and adjust for weather conditions' },
        { name: 'Seat Belts', description: 'Wear seat belts at all times - they save lives' },
        { name: 'Distracted Driving', description: 'Never use mobile phones while driving' },
        { name: 'Drunk Driving', description: 'Never drive under the influence of alcohol or drugs' },
        { name: 'Weather Conditions', description: 'Reduce speed and increase following distance in bad weather' },
        { name: 'Vehicle Maintenance', description: 'Regularly check brakes, tires, and lights' },
      ]
    },
    {
      category: 'What to Do After an Accident',
      items: [
        { name: 'Stay Calm', description: 'Take deep breaths and assess the situation' },
        { name: 'Check for Injuries', description: 'Check yourself and others for injuries' },
        { name: 'Move to Safety', description: 'If possible, move vehicles to the side of the road' },
        { name: 'Call Emergency Services', description: 'Call 911 immediately if there are injuries' },
        { name: 'Exchange Information', description: 'Exchange contact and insurance information with other drivers' },
        { name: 'Document the Scene', description: 'Take photos and notes about the accident' },
        { name: 'Report to Police', description: 'File a police report if required by law' },
      ]
    },
    {
      category: 'Prevention Tips',
      items: [
        { name: 'Regular Vehicle Checks', description: 'Check brakes, tires, lights, and fluids regularly' },
        { name: 'Defensive Driving', description: 'Always be aware of other drivers and potential hazards' },
        { name: 'Weather Awareness', description: 'Check weather conditions before driving' },
        { name: 'Rest and Alertness', description: 'Get adequate sleep and avoid driving when tired' },
        { name: 'Following Distance', description: 'Maintain at least 3 seconds following distance' },
        { name: 'Intersection Safety', description: 'Always look both ways and wait for clear signals' },
      ]
    }
  ];

  const addHeader = (doc, title) => {
    // Background band
    doc.setFillColor(15, 23, 42); // slate-900
    doc.rect(0, 0, doc.internal.pageSize.getWidth(), 40, 'F');

    // Simple vector brand mark (blue square + check)
    doc.setFillColor(14, 165, 233); // sky-500
    doc.roundedRect(12, 8, 16, 16, 3, 3, 'F');
    doc.setDrawColor(255, 255, 255);
    doc.setLineWidth(2);
    doc.line(16, 16, 20, 20);
    doc.line(20, 20, 27, 12);

    // Title
    doc.setTextColor(255, 255, 255);
    doc.setFont('helvetica', 'bold');
    doc.setFontSize(16);
    doc.text(title, 32, 20);
  };

  const addFooter = (doc) => {
    const pageWidth = doc.internal.pageSize.getWidth();
    const pageHeight = doc.internal.pageSize.getHeight();
    doc.setDrawColor(51, 65, 85); // slate-700
    doc.line(14, pageHeight - 16, pageWidth - 14, pageHeight - 16);
    doc.setTextColor(55, 65, 81); // slate-700 (darker)
    doc.setFontSize(9);
    doc.text('Generated by Road Safety Guard', 14, pageHeight - 8);
    doc.text(String(new Date().toLocaleString()), pageWidth - 14, pageHeight - 8, { align: 'right' });
  };

  const addSectionTitle = (doc, text, y) => {
    doc.setTextColor(30, 41, 59); // slate-800 (dark)
    doc.setFont('helvetica', 'bold');
    doc.setFontSize(13);
    doc.text(text, 14, y);
    return y + 6;
  };

  const addBulletPoints = (doc, items, startY) => {
    let y = startY;
    doc.setFont('helvetica', 'normal');
    doc.setTextColor(55, 65, 81); // slate-700 (dark)
    doc.setFontSize(11);
    const lineHeight = 16; // increase spacing for readability
    items.forEach((t) => {
      doc.setFillColor(15, 23, 42); // dark bullet dot
      doc.circle(16, y - 3, 2, 'F');
      doc.text(t, 24, y);
      y += lineHeight;
    });
    return y;
  };

  const downloadSafetyGuide = () => {
    const doc = new jsPDF({ unit: 'pt', format: 'a4' });
    const pageWidth = doc.internal.pageSize.getWidth();

    addHeader(doc, 'Road Safety Guide');

    // Hero banner
    doc.setFillColor(30, 41, 59); // slate-800
    doc.roundedRect(14, 56, pageWidth - 28, 90, 10, 10, 'F');
    // Decorative circle
    doc.setFillColor(99, 102, 241); // indigo-500
    doc.circle(pageWidth - 44, 86, 16, 'F');

    doc.setTextColor(224, 242, 254); // sky-100
    doc.setFontSize(14);
    doc.text('Practical rules to keep you and others safe on the road.', 26, 88);

    // Sections
    let y = 168;
    y = addSectionTitle(doc, 'Core Principles', y);
    y = addBulletPoints(doc, [
      'Obey posted speed limits and slow down in poor conditions',
      'Wear seat belts at all times for every passenger',
      'Never use a phone while driving; use hands-free only when safe',
      'Do not drive under the influence of alcohol or drugs',
      'Keep at least 3 seconds following distance (more in rain/fog)',
    ], y + 12);

    y = addSectionTitle(doc, 'Vehicle Readiness', y + 12);
    y = addBulletPoints(doc, [
      'Check tire pressure, tread, brakes and lights weekly',
      'Maintain windshield wipers and washer fluid',
      'Service your vehicle according to manufacturer schedule',
    ], y + 12);

    addFooter(doc);
    doc.save('road-safety-guide.pdf');
  };

  const downloadEmergencyChecklist = () => {
    const doc = new jsPDF({ unit: 'pt', format: 'a4' });
    const pageWidth = doc.internal.pageSize.getWidth();

    addHeader(doc, 'Emergency Checklist');

    // Callout card
    doc.setFillColor(239, 68, 68); // red-500
    doc.roundedRect(14, 56, pageWidth - 28, 70, 8, 8, 'F');
    doc.setTextColor(255, 255, 255);
    doc.setFontSize(14);
    doc.text('If there are injuries or fire hazards, call 911 immediately.', 26, 90);

    let y = 150;
    y = addSectionTitle(doc, 'Immediate Actions', y);
    y = addBulletPoints(doc, [
      'Stay calm and ensure your own safety',
      'Check for injuries and render aid if safe',
      'Move to the roadside or a safe location',
      'Turn on hazard lights and set warning triangles if available',
    ], y + 12);

    y = addSectionTitle(doc, 'After You Are Safe', y + 12);
    y = addBulletPoints(doc, [
      'Call emergency services (911) and follow instructions',
      'Exchange names, numbers, insurance and license details',
      'Photograph the scene and note time, weather and location',
      'File a police report if required by local regulations',
    ], y + 12);

    addFooter(doc);
    doc.save('emergency-checklist.pdf');
  };

  const downloadContactList = () => {
    const doc = new jsPDF({ unit: 'pt', format: 'a4' });

    addHeader(doc, 'Emergency Contact List');

    let y = 70;
    const row = (label, value) => {
      doc.setTextColor(55, 65, 81); // slate-700 (label)
      doc.setFont('helvetica', 'bold');
      doc.setFontSize(12);
      doc.text(label, 14, y);
      doc.setTextColor(30, 41, 59); // slate-800 (value)
      doc.setFont('helvetica', 'normal');
      doc.text(value, 200, y);
      y += 24;
    };

    // Card background
    doc.setFillColor(248, 250, 252); // slate-50 (light card)
    doc.roundedRect(12, 52, 572, 160, 10, 10, 'F');

    y = 90;
    row('Emergency Services', '911');
    row('Traffic Police', '100');
    row('Highway Patrol', '101');
    row('Medical Emergency', '102');

    addFooter(doc);
    doc.save('emergency-contacts.pdf');
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="card">
        <h1 className="text-3xl font-bold text-white mb-4">Safety Resources</h1>
        <p className="text-dark-400">
          Essential information and guidelines to help you stay safe on the road and know what to do in emergency situations.
        </p>
      </div>

      {/* Resources Grid */}
      <div className="space-y-8">
        {resources.map((category, categoryIndex) => (
          <div key={categoryIndex} className="card">
            <h2 className="text-2xl font-bold text-white mb-6 flex items-center">
              <div className="w-8 h-8 bg-primary-500 rounded-lg flex items-center justify-center mr-3">
                <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                </svg>
              </div>
              {category.category}
            </h2>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {category.items.map((item, itemIndex) => (
                <div key={itemIndex} className="p-4 bg-dark-700 rounded-lg hover:bg-dark-600 transition-colors duration-200">
                  <div className="flex items-start space-x-3">
                    <div className="w-6 h-6 bg-primary-500 rounded-full flex items-center justify-center flex-shrink-0 mt-1">
                      <div className="w-2 h-2 bg-white rounded-full"></div>
                    </div>
                    <div className="flex-1">
                      <h3 className="font-semibold text-white mb-1">{item.name}</h3>
                      {item.number && (
                        <p className="text-primary-400 font-mono text-lg mb-2">{item.number}</p>
                      )}
                      <p className="text-dark-300 text-sm">{item.description}</p>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>

      {/* Downloadable Content */}
      <div className="card">
        <h2 className="text-xl font-bold text-white mb-6">Downloadable Resources</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <div className="bg-dark-700 rounded-lg p-4 hover:bg-dark-600 transition-colors duration-200">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-blue-500 rounded-lg flex items-center justify-center">
                <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
              </div>
              <div>
                <h3 className="font-medium text-white">Safety Guide PDF</h3>
                <p className="text-sm text-dark-400">Complete road safety guidelines</p>
                <button onClick={downloadSafetyGuide} className="text-primary-400 hover:text-primary-300 text-sm font-medium mt-1">
                  Download →
                </button>
              </div>
            </div>
          </div>

          <div className="bg-dark-700 rounded-lg p-4 hover:bg-dark-600 transition-colors duration-200">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-green-500 rounded-lg flex items-center justify-center">
                <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <div>
                <h3 className="font-medium text-white">Emergency Checklist</h3>
                <p className="text-sm text-dark-400">What to do after an accident</p>
                <button onClick={downloadEmergencyChecklist} className="text-primary-400 hover:text-primary-300 text-sm font-medium mt-1">
                  Download →
                </button>
              </div>
            </div>
          </div>

          <div className="bg-dark-700 rounded-lg p-4 hover:bg-dark-600 transition-colors duration-200">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-yellow-500 rounded-lg flex items-center justify-center">
                <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
              </div>
              <div>
                <h3 className="font-medium text-white">Contact List</h3>
                <p className="text-sm text-dark-400">Emergency contact numbers</p>
                <button onClick={downloadContactList} className="text-primary-400 hover:text-primary-300 text-sm font-medium mt-1">
                  Download →
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Quick Actions */}
      <div className="card">
        <h2 className="text-xl font-bold text-white mb-6">Quick Actions</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <button onClick={downloadEmergencyChecklist} className="p-4 bg-red-500 hover:bg-red-600 rounded-lg text-white font-semibold transition-colors duration-200">
            <div className="flex items-center justify-center space-x-2">
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
              <span>Call 911</span>
            </div>
          </button>

          <button className="p-4 bg-yellow-500 hover:bg-yellow-600 rounded-lg text-white font-semibold transition-colors duration-200">
            <div className="flex items-center justify-center space-x-2">
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
              </svg>
              <span>Report Accident</span>
            </div>
          </button>

          <button onClick={downloadSafetyGuide} className="p-4 bg-blue-500 hover:bg-blue-600 rounded-lg text-white font-semibold transition-colors duration-200">
            <div className="flex items-center justify-center space-x-2">
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
              <span>Download Guide</span>
            </div>
          </button>

          <button onClick={downloadEmergencyChecklist} className="p-4 bg-green-500 hover:bg-green-600 rounded-lg text-white font-semibold transition-colors duration-200">
            <div className="flex items-center justify-center space-x-2">
              <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span>Safety Checklist</span>
            </div>
          </button>
        </div>
      </div>

      {/* Emergency Information Card */}
      <div className="card bg-red-900 border-red-700">
        <div className="flex items-start space-x-4">
          <div className="w-12 h-12 bg-red-500 rounded-lg flex items-center justify-center flex-shrink-0">
            <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <div>
            <h3 className="text-xl font-bold text-white mb-2">Emergency Information</h3>
            <p className="text-red-200 mb-4">
              In case of a serious accident with injuries, call 911 immediately.
              Do not move injured persons unless they are in immediate danger.
            </p>
            <div className="flex flex-wrap gap-2">
              <span className="px-3 py-1 bg-red-500 text-white rounded-full text-sm font-medium">
                Call 911 for emergencies
              </span>
              <span className="px-3 py-1 bg-red-500 text-white rounded-full text-sm font-medium">
                Stay at the scene
              </span>
              <span className="px-3 py-1 bg-red-500 text-white rounded-full text-sm font-medium">
                Render aid if safe
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SafetyResources;
